import axios from 'axios';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API_BASE = `${BACKEND_URL}/api`;\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user_data');\n      window.location.href = '/';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: (updates) => api.put('/auth/profile', updates),\n  logout: () => api.post('/auth/logout'),\n};\n\n// Products API\nexport const productsAPI = {\n  getAll: (params = {}) => api.get('/products', { params }),\n  getById: (id) => api.get(`/products/${id}`),\n};\n\n// Daily Deals API\nexport const dealsAPI = {\n  getDaily: () => api.get('/deals/daily'),\n  getStats: () => api.get('/deals/stats'),\n};\n\n// Cart API\nexport const cartAPI = {\n  get: () => api.get('/cart'),\n  add: (item) => api.post('/cart/add', item),\n  update: (productId, quantity) => api.put(`/cart/${productId}`, { quantity }),\n  remove: (productId) => api.delete(`/cart/${productId}`),\n  clear: () => api.delete('/cart'),\n  getSummary: () => api.get('/cart/summary'),\n};\n\n// Orders API\nexport const ordersAPI = {\n  create: (orderData) => api.post('/orders', orderData),\n  getAll: (params = {}) => api.get('/orders', { params }),\n  getById: (id) => api.get(`/orders/${id}`),\n};\n\n// Wictionary API\nexport const wictionaryAPI = {\n  getTerms: (params = {}) => api.get('/wictionary', { params }),\n  search: (query) => api.get('/wictionary/search', { params: { q: query } }),\n  suggest: (suggestion) => api.post('/wictionary/suggest', suggestion),\n  getCategories: () => api.get('/wictionary/categories'),\n  getStats: () => api.get('/wictionary/stats'),\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/health'),\n};\n\nexport default api;"